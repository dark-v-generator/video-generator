[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[project]
name = "video-generator"
version = "0.1.0"
description = "A video generator application that creates narrated videos with AI-generated content"
authors = [
    {name = "Gustavo Marques", email = "your.email@example.com"},
]
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Core Application Dependencies
    "fastapi==0.115.6",
    "uvicorn==0.32.1",
    "pydantic==2.10.5",
    "pydantic-settings==2.7.0",
    "dependency-injector==4.42.0",
    # AI/ML Services
    "openai==1.59.8",
    "anthropic==0.3.0",
    "ollama==0.4.4",
    "openai-whisper==20250625",
    # Speech Services
    "azure-cognitiveservices-speech==1.42.0",
    "elevenlabs==0.2.0",
    "coqui-tts==0.27.0",
    # Media Processing
    "moviepy==2.1.2",
    "numpy==2.1.3",
    "torch==2.8.0",
    "pydub==0.25.1",
    # Web Scraping & APIs
    "requests==2.32.3",
    "aiohttp==3.10.11",
    "beautifulsoup4==4.12.3",
    "google-api-python-client==2.159.0",
    "pytubefix==8.13.1",
    # Utilities
    "PyYAML==6.0.2",
    "Unidecode==1.4.0",
    "proglog==0.1.10",
    "playwright==1.49.1",
    # Development
    "typing_extensions==4.15.0",
    "python-multipart==0.0.20",
    "fish-audio-sdk>=2025.6.3",
]

[project.optional-dependencies]
test = [
    "pytest==8.4.1",
    "pytest-asyncio==1.1.0",
    "pytest-mock==3.14.1",
    "pytest-cov==6.2.1",
]

dev = [
    # Include test dependencies
    "pytest==8.4.1",
    "pytest-asyncio==1.1.0",
    "pytest-mock==3.14.1",
    "pytest-cov==6.2.1",
    # Add any other dev tools here
]

[project.urls]
Homepage = "https://github.com/gustavomarques/video-generator"
Repository = "https://github.com/gustavomarques/video-generator"
Issues = "https://github.com/gustavomarques/video-generator/issues"

[project.scripts]
video-generator = "main:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.black]
target-version = ["py310"]
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''
