# Video Generator - Environment Configuration
# Copy this file to .env and update values as needed

# ===== API Settings =====
API_HOST=0.0.0.0
API_PORT=8000
DEBUG=true
ENVIRONMENT=development

# ===== Database Settings =====
DATABASE_URL=sqlite:///./video_generator.db

# ===== File Storage Settings =====
# Base directory for file storage (relative to project root or absolute path)
FILE_STORAGE_BASE_PATH=storage

# ===== Application Paths =====
# Configuration file location
DEFAULT_CONFIG_PATH=config/base.yaml

# Directory for storing video histories
HISTORIES_PATH=output

# Directory for static assets (fonts, images, etc.)
ASSETS_PATH=assets

# ===== External API Keys =====
# OpenAI API for content enhancement
OPENAI_API_KEY=your_openai_api_key_here

# Azure Speech Services
AZURE_SPEECH_KEY=your_azure_speech_key_here
AZURE_SPEECH_REGION=your_azure_region_here

# Fish Audio (for FishSpeechService)
FISH_AUDIO_API_KEY=your_fish_audio_api_key_here

# ===== Local LLM Settings (Ollama) =====
# Ollama server URL (default: http://localhost:11434)
OLLAMA_BASE_URL=http://localhost:11434
# Default model to use with Ollama
OLLAMA_MODEL=llama3.2:latest

# Google Cloud credentials (optional)
GOOGLE_CLOUD_CREDENTIALS_PATH=/path/to/credentials.json

# ===== Video Processing =====
# Path to ffmpeg binary (optional, will use system default if not specified)
FFMPEG_PATH=/usr/local/bin/ffmpeg

# ===== Example Usage =====
# 1. Copy this file: cp env.example .env
# 2. Update the values above with your actual configuration
# 3. Sensitive values (API keys) should never be committed to version control
# 4. The application will automatically load these values on startup

# ===== Storage Examples =====
# Local storage in project directory:
# FILE_STORAGE_BASE_PATH=storage

# Absolute path on system:
# FILE_STORAGE_BASE_PATH=/var/lib/video-generator/storage

# Network storage mount:
# FILE_STORAGE_BASE_PATH=/mnt/network-storage/video-generator

# ===== Notes =====
# - Environment variables override these .env values
# - All paths can be relative (to project root) or absolute
# - The application will create directories if they don't exist
# - File storage is managed through the repository pattern for easy swapping
